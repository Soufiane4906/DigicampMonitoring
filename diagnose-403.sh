#!/bin/bash

# Script de diagnostic pour l'erreur 403 Forbidden
# √Ä ex√©cuter depuis le dossier racine du projet

echo "üîç Diagnostic de l'erreur 403 Forbidden"
echo "========================================"
echo ""

# 1. V√©rifier que les conteneurs sont en cours d'ex√©cution
echo "üì¶ 1. V√©rification des conteneurs Docker..."
docker-compose ps
echo ""

# 2. V√©rifier les logs backend pour les erreurs JWT
echo "üîê 2. Recherche d'erreurs JWT dans les logs backend..."
docker-compose logs backend | grep -i "jwt\|token\|403\|authentication" | tail -20
echo ""

# 3. Tester l'authentification
echo "üîë 3. Test d'authentification..."
TOKEN=$(curl -s -X POST http://localhost:8080/api/auth/login \
  -H "Content-Type: application/json" \
  -d '{"username":"admin","password":"admin123"}' \
  | jq -r '.token')

if [ "$TOKEN" != "null" ] && [ -n "$TOKEN" ]; then
  echo "‚úÖ Authentification r√©ussie"
  echo "Token (premiers 50 caract√®res): ${TOKEN:0:50}..."
  
  # 4. Tester l'acc√®s aux projets avec le token
  echo ""
  echo "üìÅ 4. Test d'acc√®s aux projets avec le token..."
  HTTP_CODE=$(curl -s -o /dev/null -w "%{http_code}" \
    -H "Authorization: Bearer $TOKEN" \
    http://localhost:8080/api/projects)
  
  if [ "$HTTP_CODE" == "200" ]; then
    echo "‚úÖ Acc√®s aux projets OK (HTTP $HTTP_CODE)"
    echo ""
    echo "üéâ Le backend fonctionne correctement !"
    echo "üìå Le probl√®me vient probablement du frontend (cache navigateur ou build)"
    echo ""
    echo "Solutions :"
    echo "  1. Videz le cache du navigateur (Ctrl+Shift+Delete)"
    echo "  2. Reconnectez-vous √† l'application"
    echo "  3. Si le probl√®me persiste, reconstruisez le frontend:"
    echo "     docker-compose restart frontend"
  else
    echo "‚ùå Erreur d'acc√®s aux projets (HTTP $HTTP_CODE)"
    echo "Le backend a un probl√®me de configuration de s√©curit√©"
  fi
else
  echo "‚ùå √âchec de l'authentification"
  echo "V√©rifiez que le backend est d√©marr√© et que la base de donn√©es est seeded"
fi

echo ""
echo "5. V√©rification de la configuration CORS..."
curl -s -I -X OPTIONS http://localhost:8080/api/projects \
  -H "Origin: http://localhost" \
  -H "Access-Control-Request-Method: POST" \
  -H "Access-Control-Request-Headers: Authorization, Content-Type" \
  | grep -i "access-control"

echo ""
echo "======================================"
echo "Diagnostic termin√©"
